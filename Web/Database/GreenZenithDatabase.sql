DROP DATABASE IF EXISTS GreenZenith;
CREATE DATABASE GreenZenith;
USE GreenZenith;

CREATE TABLE PUser (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PUsername NVARCHAR(50) NOT NULL,
    Email NVARCHAR(100) NOT NULL UNIQUE,
    Age INT NOT NULL,
    Location NVARCHAR(50),
    PasswordUser NVARCHAR(30) NOT NULL,
    AdministratorAccess BOOLEAN
);
CREATE TABLE UserPicture (
    UserID INT PRIMARY KEY,
    Picture MEDIUMBLOB NOT NULL,
    FOREIGN KEY (UserID) REFERENCES PUser(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Plant (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    PlantName NVARCHAR(25) NOT NULL,
    PlantingDate DATE NOT NULL,
    PlantDescription TEXT,
    Quantity INT NOT NULL,
    UserID INT,
    FOREIGN KEY (UserID) REFERENCES PUser(ID) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE PlantPicture (
    PlantID INT PRIMARY KEY,
    Picture MEDIUMBLOB NOT NULL,
    FOREIGN KEY (PlantID) REFERENCES Plant(ID) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE PlantSchedule (
    PlantID INT PRIMARY KEY,
    WaterTime TIME NOT NULL,
    FOREIGN KEY (PlantID) REFERENCES Plant(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Product (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Title NVARCHAR(30) NOT NULL,
    ProductDescription TEXT,
    Price DECIMAL(19, 4) NOT NULL,
    Quantity INT NOT NULL,
    PlantID INT,
    FOREIGN KEY (PlantID) REFERENCES Plant(ID) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE ProductPicture (
    ProductID INT PRIMARY KEY,
    Picture MEDIUMBLOB NOT NULL,
    FOREIGN KEY (ProductID) REFERENCES Product(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Message (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    Content TEXT NOT NULL,
    SentDateTime DATETIME NOT NULL,
    SenderID INT,
    RecieverID INT,
    FOREIGN KEY (SenderID) REFERENCES PUser(ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (RecieverID) REFERENCES PUser(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Cart (
    UserID INT,
    ProductID INT,
    Quantity INT,
    PRIMARY KEY (UserID, ProductID),
    FOREIGN KEY (UserID) REFERENCES PUser(ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (ProductID) REFERENCES Product(ID) ON DELETE CASCADE ON UPDATE CASCADE
);